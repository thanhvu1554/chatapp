name: Build iOS App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          brew update
          brew install autoconf automake libtool pkg-config gettext ccache
          python -m pip install --upgrade pip
          python -m pip install Cython
          # Thử pip install từ trực tiếp từ repo
          pip install git+https://github.com/kivy/kivy-ios.git@master

      - name: Fix libffi patch issue
        run: |
          # Sửa issue với hostlibffi
          RECIPE_PATH=$(python -c "import kivy_ios; import os; print(os.path.join(kivy_ios.__path__[0], 'recipes', 'hostlibffi', '__init__.py'))")
          echo "Fixing $RECIPE_PATH"
          
          # Tạo file sửa lỗi
          cat > fix_hostlibffi.py << 'EOF'
          import sys
          
          # Đọc file recipe
          with open(sys.argv[1], 'r') as f:
              content = f.read()
          
          # Thay thế phương thức prebuild_arch để tránh áp dụng patch
          fixed_content = content.replace(
              'def prebuild_arch(self, arch):',
              'def prebuild_arch(self, arch):\n        # Patch disabled to avoid errors\n        return\n        # Original code below'
          )
          
          # Lưu lại
          with open(sys.argv[1], 'w') as f:
              f.write(fixed_content)
          
          print(f"Fixed {sys.argv[1]}")
          EOF
          
          python fix_hostlibffi.py "$RECIPE_PATH"
          
          # Tạo symlink cython-2.7
          CYTHON_PATH=$(which cython)
          sudo ln -sf "$CYTHON_PATH" /usr/local/bin/cython-2.7

      - name: Build basic dependencies
        run: |
          cd ${{ github.workspace }}
          mkdir -p iosbuild
          cd iosbuild
          
          # Bắt đầu với một số dependency cơ bản
          echo "Building hostpython3..."
          python -m kivy_ios.toolchain build hostpython3
          
          echo "Building kivy..."
          python -m kivy_ios.toolchain build kivy
       
      - name: Build app
        run: |
          cd ${{ github.workspace }}/iosbuild
          
          # Tạo app
          echo "Creating app..."
          python -m kivy_ios.toolchain create beluga_chat_app ../main.py
          
          echo "Building app..."
          python -m kivy_ios.toolchain build beluga_chat_app
          
          echo "Creating Xcode project..."
          python -m kivy_ios.toolchain xcode beluga_chat_app

      - name: Build IPA
        run: |
          cd ${{ github.workspace }}/iosbuild/beluga_chat_app-ios
          
          # Sửa Xcode settings nếu cần
          sed -i '' -e 's/BITCODE_GENERATION_MODE=bitcode //g' *.xcodeproj/project.pbxproj || true
          
          # Build IPA
          xcodebuild -scheme beluga_chat_app -configuration Release -archivePath beluga_chat_app.xcarchive archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO || true
          
          # Kiểm tra xem đã có file IPA chưa
          find . -name "*.app" -o -name "*.ipa"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: beluga-chat-ios
          path: |
            ${{ github.workspace }}/iosbuild/beluga_chat_app-ios/build/Release-iphoneos/
            ${{ github.workspace }}/iosbuild/beluga_chat_app-ios/*.xcarchive/
