workflows:
  kivy-ios-unsigned:
    name: Beluga Chat
    environment:
      xcode: latest
      vars:
        APP_NAME: "beluga_chat_sapp"
        BUNDLE_ID: "com.beluga.chatt"

    scripts:
      - name: Cài công cụ build & automake
        script: |
          brew update
          brew install automake libtool pkg-config
          echo "✅ Kiểm tra automake:"
          automake --version || { echo "❌ Automake không cài được!"; exit 1; }

      - name: Cài Python và pip
        script: |
          brew install python
          pip3 install --upgrade pip
          pip3 install virtualenv

      - name: Cài kivy-ios
        script: |
          pip3 install kivy-ios

      - name: Build dependencies với debug chi tiết
        script: |
          cd $CM_BUILD_DIR
          mkdir -p iosbuild
          cd iosbuild

          echo "🌐 Tải trước openssl để tránh lỗi mạng"
          mkdir -p .cache
          curl -L -o .cache/hostopenssl-openssl-1.1.1w.tar.gz https://www.openssl.org/source/openssl-1.1.1w.tar.gz

          echo "🔧 Giới hạn số job về 2 để giảm RAM"
          export KIVY_IOS_JOBS=2

          echo "📦 Build hostopenssl..."
          toolchain build hostopenssl || { echo "❌ Build hostopenssl failed"; exit 1; }

          echo "📦 Build libffi..."
          toolchain build libffi || { echo "❌ Build libffi failed"; exit 1; }

          echo "📦 Build openssl..."
          toolchain build openssl || { echo "❌ Build openssl failed"; exit 1; }

          echo "📦 Build hostpython3..."
          toolchain build hostpython3 || { echo "❌ Build hostpython3 failed"; exit 1; }

          echo "📦 Build python3..."
          toolchain build python3 || { 
            echo "❌ Build python3 failed"; 
            echo "📁 Kiểm tra thư mục .cache:"
            ls -lhR .cache
            echo "📁 Kiểm tra dung lượng ổ đĩa:"
            df -h
            exit 1; 
          }

          echo "📦 Build kivy..."
          toolchain build kivy || { echo "❌ Build kivy failed"; exit 1; }

      - name: Tạo project từ main.py
        script: |
          cd $CM_BUILD_DIR/iosbuild
          echo "📁 Kiểm tra workspace:"
          ls -la ../

          if [ -f "../kivy_chat_app/main.py" ]; then
            echo "✅ Found main.py trong kivy_chat_app"
            toolchain create $APP_NAME ../kivy_chat_app/main.py
          elif [ -f "../main.py" ]; then
            echo "✅ Found main.py trong thư mục gốc"
            toolchain create $APP_NAME ../main.py
          else
            echo "❌ Không tìm thấy main.py"
            exit 1
          fi

      - name: Tạo Xcode project & sửa Bundle ID
        script: |
          cd $CM_BUILD_DIR/iosbuild
          toolchain xcode $APP_NAME
          cd $CM_BUILD_DIR/iosbuild/$APP_NAME-ios

          echo "📁 Kiểm tra cấu trúc thư mục:"
          ls -la
          echo "📁 Bên trong thư mục app:"
          ls -la $APP_NAME/

          if [ -f "$APP_NAME/Info.plist" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "$APP_NAME/Info.plist"
            echo "✅ Bundle ID đã được sửa"
          elif [ -f "$APP_NAME/$APP_NAME-Info.plist" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "$APP_NAME/$APP_NAME-Info.plist"
            echo "✅ Bundle ID đã được sửa (file -Info.plist)"
          else
            echo "⚠️ Không tìm thấy Info.plist"
            find . -name "Info.plist" -o -name "*-Info.plist"
          fi

      - name: Build IPA unsigned
        script: |
          cd $CM_BUILD_DIR/iosbuild/$APP_NAME-ios

          echo "📦 Bắt đầu build archive"
          xcodebuild -scheme $APP_NAME -configuration Release -archivePath $APP_NAME.xcarchive archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

          echo "📦 Tạo exportOptions.plist"
          cat > exportOptions.plist << EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
          </dict>
          </plist>
          EOL

          echo "📦 Export IPA"
          xcodebuild -exportArchive -archivePath $APP_NAME.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build/Release-iphoneos CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

          echo "📦 Kiểm tra IPA:"
          find build -name "*.ipa"

    artifacts:
      - iosbuild/$APP_NAME-ios/build/Release-iphoneos/*.ipa
