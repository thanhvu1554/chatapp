workflows:
  kivy-ios-unsigned:
    name: Beluga Chat
    environment:
      xcode: latest
      vars:
        APP_NAME: "beluga_chat_sapp"
        BUNDLE_ID: "com.beluga.chatt"
        KIVY_IOS_VERSION: "1.3.0" # Phiên bản ổn định hơn

    scripts:
      - name: Cài toàn bộ công cụ build cần thiết
        script: |
          brew update
          brew install python@3.9 autoconf automake libtool pkg-config gettext gawk bash git
          export PATH="/usr/local/opt/python@3.9/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH"
          export PATH="/usr/local/opt/gettext/bin:$PATH"
          
          echo "✅ Python version: $(python3.9 --version)"
          echo "✅ pip version: $(pip3.9 --version)"
          echo "✅ Python path: $(which python3.9)"
          echo "✅ pip path: $(which pip3.9)"
          echo "✅ Current PATH: $PATH"

          brew link --overwrite automake autoconf libtool gettext
          brew install openssl@1.1 sdl2 sdl2_image sdl2_ttf sdl2_mixer
          ln -sf /usr/local/Cellar/openssl@1.1/*/lib/libssl.1.1.dylib /usr/local/lib/ || true
          ln -sf /usr/local/Cellar/openssl@1.1/*/lib/libcrypto.1.1.dylib /usr/local/lib/ || true

      - name: Cài kivy-ios và Cython, và kiểm tra Cython
        script: |
          export PATH="/usr/local/opt/python@3.9/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH"
          export PATH="/usr/local/opt/gettext/bin:$PATH"

          python3.9 -m pip install --upgrade pip
          # Cài Cython trước và kiểm tra kỹ
          pip3.9 install Cython
          echo "✅ Cython version: $(cython --version || cython3 --version)"
          echo "✅ Cython path: $(which cython || which cython3)"
          
          # Thử tạo symlink nếu 'cython' không được tìm thấy trực tiếp
          if ! command -v cython &> /dev/null; then
              if command -v cython3 &> /dev/null; then
                  echo "Creating symlink for cython from cython3..."
                  sudo ln -sf $(which cython3) /usr/local/bin/cython
              else
                  echo "❌ Cython (cython or cython3) not found after installation!"
                  exit 1
              fi
          fi
          # Đảm bảo /usr/local/bin có trong PATH (thường là mặc định)
          export PATH="/usr/local/bin:$PATH"
          echo "✅ Final Cython path check: $(which cython)"
          export CYTHON=$(which cython) # Đặt biến môi trường CYTHON
          echo "✅ CYTHON env var set to: $CYTHON"

          pip3.9 install wheel virtualenv
          pip3.9 install kivy-ios==$KIVY_IOS_VERSION
          
          echo "Using kivy-ios version: $KIVY_IOS_VERSION installed for Python 3.9"
          
          rm -rf ~/.kivy-ios/build/* || true
          rm -rf ~/.kivy-ios/dist/* || true
          
          # Patch toolchain.py để tìm cython đúng cách hơn
          KIVY_IOS_TOOLCHAIN_FILE=$(pip3.9 show kivy-ios | grep Location | cut -d ' ' -f 2)/kivy_ios/toolchain.py
          if [ -f "$KIVY_IOS_TOOLCHAIN_FILE" ]; then
            echo "Patching $KIVY_IOS_TOOLCHAIN_FILE to prefer 'cython' or 'cython3'..."
            # Thay thế việc tìm kiếm cython-2.7 hoặc các tên cụ thể bằng một trình tự ưu tiên hơn
            sed -i.bak \
              "s/cython_fn = self.cython_fn ChoiceContainer(\(cython_variants\))/cython_fn = self.cython_fn ChoiceContainer(('cython', 'cython3'))/g" \
              "$KIVY_IOS_TOOLCHAIN_FILE"
            sed -i.bak \
              "s/self.cython = cython/self.cython = sh.which('cython') or sh.which('cython3') or cython/g" \
              "$KIVY_IOS_TOOLCHAIN_FILE"
            echo "Patched toolchain.py for Cython detection."
          else
            echo "⚠️ Could not find $KIVY_IOS_TOOLCHAIN_FILE to patch."
          fi

      - name: Chuẩn bị thư mục build
        script: |
          mkdir -p $CM_BUILD_DIR/iosbuild
          cd $CM_BUILD_DIR/iosbuild

      - name: Build iOS dependencies
        script: |
          export PATH="/usr/local/opt/python@3.9/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH"
          export PATH="/usr/local/opt/gettext/bin:$PATH"
          export PATH="/usr/local/bin:$PATH" # Đảm bảo symlink cython được dùng
          export CYTHON=$(which cython) # Đảm bảo biến môi trường được kế thừa
          cd $CM_BUILD_DIR/iosbuild
          
          export MAKEFLAGS="-j2"
          export KIVY_IOS_JOBS=2
          export SDKROOT=$(xcrun --sdk iphoneos --show-sdk-path)
          export IPHONEOS_DEPLOYMENT_TARGET=10.0
          export MACOSX_DEPLOYMENT_TARGET=10.15
          export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CFLAGS="-I/usr/local/include -I/usr/local/opt/openssl@1.1/include"
          export LDFLAGS="-L/usr/local/lib -L/usr/local/opt/openssl@1.1/lib"
          
          echo "🔧 SDKROOT: $SDKROOT"
          echo "🔧 CYTHON for this step: $CYTHON"
          
          for recipe in libffi openssl; do
            echo "📦 Building $recipe..."
            python3.9 -m kivy_ios.toolchain build $recipe || {
              echo "⚠️ Thử lại $recipe sau khi xóa cache..."
              rm -rf ~/.kivy-ios/build/$recipe ~/.kivy-ios/dist/$recipe
              python3.9 -m kivy_ios.toolchain build $recipe || echo "⚠️ Thất bại với $recipe."
            }
          done
          
          echo "📦 Building python3..."
          export _PYTHON_HOST_PLATFORM=darwin
          export PYTHONPATH=$(pwd)
          export CC=$(xcrun -find -sdk iphoneos clang)
          
          python3.9 -m kivy_ios.toolchain build python3 || {
            echo "⚠️ Thử lại python3 với patch..."
            rm -rf ~/.kivy-ios/build/python3 ~/.kivy-ios/dist/python3
            
            KIVY_IOS_ROOT_DIR=$(pip3.9 show kivy-ios | grep Location | cut -d ' ' -f 2)/kivy_ios
            cd $KIVY_IOS_ROOT_DIR
            echo "Patching Python3 recipe in $KIVY_IOS_ROOT_DIR..."
            
            echo 'import os' > patch_python.py
            echo 'import fileinput' >> patch_python.py
            echo '' >> patch_python.py
            echo 'recipe_file = "recipes/python3/__init__.py"' >> patch_python.py
            echo 'if os.path.exists(recipe_file):' >> patch_python.py
            echo '    print(f"Found recipe file: {os.path.abspath(recipe_file)}")' >> patch_python.py
            echo '    print("Patching Python3 recipe...")' >> patch_python.py
            echo '    with fileinput.FileInput(recipe_file, inplace=True) as file:' >> patch_python.py
            echo '        for line in file:' >> patch_python.py
            echo '            if "def get_recipe_env" in line:' >> patch_python.py
            echo '                print(line, end="")' >> patch_python.py
            echo '                print("        env[\\\"_PYTHON_HOST_PLATFORM\\\"] = \\\"darwin\\\"")' >> patch_python.py
            echo '                print("        env[\\\"PYTHONPATH\\\"] = os.getcwd()")' >> patch_python.py
            echo '            else:' >> patch_python.py
            echo '                print(line, end="")' >> patch_python.py
            echo '    print("Done patching Python3 recipe")' >> patch_python.py
            echo 'else:' >> patch_python.py
            echo '    print(f"Python3 recipe file not found at {os.path.abspath(recipe_file)}")' >> patch_python.py

            python3.9 patch_python.py
            
            cd $CM_BUILD_DIR/iosbuild
            python3.9 -m kivy_ios.toolchain build python3 || {
              echo "❌ Lỗi Python3 nghiêm trọng."
              exit 1
            }
          }
          
          echo "📦 Building kivy..."
          python3.9 -m kivy_ios.toolchain build kivy || {
            echo "⚠️ Thử lại kivy sau khi xóa cache..."
            rm -rf ~/.kivy-ios/build/kivy ~/.kivy-ios/dist/kivy
            python3.9 -m kivy_ios.toolchain build kivy || {
              echo "❌ Lỗi Kivy nghiêm trọng."
              exit 1
            }
          }
          
          if [ ! -d ~/.kivy-ios/dist/python3 ] || [ ! -d ~/.kivy-ios/dist/kivy ]; then
            echo "❌ Thiếu dependencies Python3 hoặc Kivy."
            exit 1
          fi
          echo "✅ Đã build xong dependencies chính."

      - name: Tạo project từ source
        script: |
          export PATH="/usr/local/opt/python@3.9/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH"
          export PATH="/usr/local/bin:$PATH"
          export CYTHON=$(which cython)
          cd $CM_BUILD_DIR/iosbuild
          if [ -f "../kivy_chat_app/main.py" ]; then
            python3.9 -m kivy_ios.toolchain create $APP_NAME ../kivy_chat_app/main.py
          elif [ -f "../main.py" ]; then
            python3.9 -m kivy_ios.toolchain create $APP_NAME ../main.py
          else
            echo "❌ main.py not found"
            exit 1
          fi
          python3.9 -m kivy_ios.toolchain build $APP_NAME || {
            echo "⚠️ Thất bại build app, thử lại..."
            python3.9 -m kivy_ios.toolchain build $APP_NAME
          }

      - name: Chuẩn bị Xcode project
        script: |
          export PATH="/usr/local/opt/python@3.9/bin:/usr/local/opt/python@3.9/libexec/bin:$PATH"
          export PATH="/usr/local/bin:$PATH"
          export CYTHON=$(which cython)
          cd $CM_BUILD_DIR/iosbuild
          python3.9 -m kivy_ios.toolchain xcode $APP_NAME
          cd $APP_NAME-ios
          PLIST_PATH="$APP_NAME/Info.plist"
          if [ -f "$PLIST_PATH" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "$PLIST_PATH"
          else
            echo "⚠️ Info.plist not found at $PLIST_PATH"
            exit 1
          fi

      - name: Build IPA
        script: |
          cd $CM_BUILD_DIR/iosbuild/$APP_NAME-ios
          cat > exportOptions.plist <<EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
          </dict>
          </plist>
          EOL
          xcodebuild -scheme $APP_NAME -configuration Release \
                    -archivePath $APP_NAME.xcarchive archive \
                    CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          xcodebuild -exportArchive -archivePath $APP_NAME.xcarchive \
                    -exportOptionsPlist exportOptions.plist \
                    -exportPath build/Release-iphoneos \
                    CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          echo "✅ Build completed. IPA location:"
          find build -name "*.ipa"

    artifacts:
      - iosbuild/$APP_NAME-ios/build/Release-iphoneos/*.ipa 
