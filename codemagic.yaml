workflows:
  kivy-ios-build:
    name: Beluga Chat iOS
    environment:
      xcode: latest
      vars:
        APP_NAME: "beluga_chat_app"
        BUNDLE_ID: "com.beluga.chat"

    scripts:
      - name: Cài đặt dependencies
        script: |
          brew update
          brew install autoconf automake libtool pkg-config gettext ccache pigz pbzip2
          python3 -m pip install --upgrade pip
          python3 -m pip install Cython pillow kivy
          
          # Kiểm tra phiên bản và đường dẫn
          echo "✅ Python: $(python3 --version)"
          echo "✅ Cython: $(cython --version || cython3 --version)"
          echo "✅ Cython path: $(which cython || which cython3)"
          
          # Tạo symlink cython-2.7 (cần thiết cho kivy-ios)
          CYTHON_PATH=$(which cython || which cython3)
          sudo ln -sf "$CYTHON_PATH" /usr/local/bin/cython-2.7
          echo "✅ Created symlink cython-2.7 -> $CYTHON_PATH"

      - name: Cài đặt kivy-ios từ GitHub
        script: |
          # Cài đặt kivy-ios trực tiếp từ GitHub để có phiên bản mới nhất
          git clone https://github.com/kivy/kivy-ios.git
          cd kivy-ios
          python3 -m pip install -e .
          
          # Kiểm tra cài đặt
          python3 -c "import kivy_ios; print(f'kivy-ios path: {kivy_ios.__path__[0]}')"
          python3 toolchain.py --help || true
          
          # Liệt kê các recipes có sẵn
          echo "Available recipes:"
          python3 toolchain.py recipes || true

      - name: Kiểm tra thư mục dự án
        script: |
          echo "Tìm file main.py:"
          find $CM_BUILD_DIR -name "main.py" | sort
          
          # Sử dụng main.py từ thư mục gốc vì kivy_chat_app không tồn tại
          export MAIN_PY="$CM_BUILD_DIR/main.py"
          if [ -f "$MAIN_PY" ]; then
            echo "✅ Tìm thấy file main.py ở thư mục gốc"
          else
            echo "❌ Không tìm thấy main.py ở thư mục gốc"
            # Tìm main.py ở bất kỳ vị trí nào
            MAIN_PY=$(find $CM_BUILD_DIR -name "main.py" | grep -v "kivy-ios/tests" | head -n 1)
            if [ -n "$MAIN_PY" ]; then
              echo "✅ Đã tìm thấy main.py ở: $MAIN_PY"
            else
              echo "❌ Không tìm thấy main.py trong thư mục dự án"
              exit 1
            fi
          fi
          echo "Sẽ sử dụng main.py từ: $MAIN_PY"

      - name: Build từng bước
        script: |
          mkdir -p $CM_BUILD_DIR/iosbuild
          cd $CM_BUILD_DIR/kivy-ios
          
          # Bây giờ main.py ở thư mục gốc
          export MAIN_PY="$CM_BUILD_DIR/main.py"
          # Nếu không tìm thấy, thử tìm ở bất kỳ vị trí nào
          if [ ! -f "$MAIN_PY" ]; then
            MAIN_PY=$(find $CM_BUILD_DIR -name "main.py" | grep -v "kivy-ios/tests" | head -n 1)
          fi
          
          echo "Sử dụng main.py từ: $MAIN_PY"
          
          echo "====== Building python3 ======"
          python3 toolchain.py build python3 || true
          
          echo "====== Building kivy ======"
          python3 toolchain.py build kivy || true
          
          echo "====== Creating app ======"
          python3 toolchain.py create $APP_NAME "$MAIN_PY" || true
          
          echo "====== Showing build results ======"
          ls -la
          find . -name "*.xcodeproj" || echo "Không tìm thấy project Xcode"

      - name: Build IPA (nếu có project Xcode)
        script: |
          cd $CM_BUILD_DIR/kivy-ios
          # Tìm project Xcode đã tạo
          XCODEPROJ=$(find . -name "*.xcodeproj" | head -n 1)
          
          if [ -n "$XCODEPROJ" ]; then
            APP_DIR=$(dirname "$XCODEPROJ")
            APP_NAME=$(basename "$APP_DIR" -ios)
            
            echo "Tìm thấy project: $XCODEPROJ, tên app: $APP_NAME"
            cd "$APP_DIR"
            
            # Build ứng dụng không ký
            xcodebuild -project "$APP_NAME.xcodeproj" -scheme "$APP_NAME" -sdk iphoneos -configuration Release clean archive -archivePath build/"$APP_NAME".xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
            
            # Tạo IPA
            mkdir -p build/IPA
            cp -r build/"$APP_NAME".xcarchive/Products/Applications/"$APP_NAME".app build/IPA/
            cd build/IPA
            zip -r "$APP_NAME".ipa "$APP_NAME".app
            
            # Hiển thị kết quả
            ls -la
            cd ../..
            find . -name "*.ipa"
          else
            echo "Không tìm thấy project Xcode, sẽ build thư viện kivy-ios"
            find $CM_BUILD_DIR/kivy-ios -name "*.a" || true
          fi

      - name: Liệt kê tất cả file artifacts
        script: |
          echo "===== LIỆT KÊ TẤT CẢ CÁC FILE QUAN TRỌNG ====="
          echo "1. IPA files:"
          find $CM_BUILD_DIR -name "*.ipa" || true
          
          echo "2. APP files:"
          find $CM_BUILD_DIR -name "*.app" -type d || true
          
          echo "3. Xcode projects:"
          find $CM_BUILD_DIR -name "*.xcodeproj" -type d || true
          
          echo "4. Library files (.a):"
          find $CM_BUILD_DIR -name "*.a" | head -n 20 || true
          
          echo "5. Cấu trúc thư mục kivy-ios:"
          ls -la $CM_BUILD_DIR/kivy-ios/ || true
          
          echo "6. Thư mục dist:"
          ls -la $CM_BUILD_DIR/kivy-ios/dist/ || true
          
          echo "===== KẾT THÚC DANH SÁCH ====="

    artifacts:
      - kivy-ios/*-ios/build/IPA/*.ipa
      - kivy-ios/dist/**
      - kivy-ios/*.app
      - kivy-ios/**/*.app
      - kivy-ios/**/*.a
      - kivy-ios/*-ios/**
      - $CM_BUILD_DIR/iosbuild/**
      - kivy-ios/*.xcodeproj
      - kivy-ios/**/*.xcodeproj
      - $CM_BUILD_DIR/**/*.ipa
      - $CM_BUILD_DIR/**/*.app 
