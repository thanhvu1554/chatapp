workflows:
  kivy-ios-unsigned:
    name: Beluga Chat
    environment:
      xcode: latest
      vars:
        APP_NAME: "beluga_chat_sapp"
        BUNDLE_ID: "com.beluga.chatt"

    scripts:
      - name: Cài toàn bộ công cụ build cần thiết
        script: |
          brew update
          brew install python autoconf automake libtool pkg-config gettext gawk bash git
          brew link --overwrite automake autoconf libtool gettext
          
          echo "✅ Kiểm tra tool:"
          which automake && automake --version
          which autoconf && autoconf --version
          which libtool && libtool --version
          which pkg-config && pkg-config --version

      - name: Cài kivy-ios và dependencies
        script: |
          pip3 install --upgrade pip virtualenv kivy-ios

      - name: Chuẩn bị thư mục build
        script: |
          mkdir -p $CM_BUILD_DIR/iosbuild
          cd $CM_BUILD_DIR/iosbuild

      - name: Build dependencies
        script: |
          cd $CM_BUILD_DIR/iosbuild
          export MAKEFLAGS="-j2"
          export KIVY_IOS_JOBS=2
          
          # Chỉ build những recipe thực sự tồn tại
          for lib in openssl libffi python3 kivy; do
            echo "📦 Building $lib..."
            toolchain build $lib || { echo "❌ Build $lib failed"; exit 1; }
          done

      - name: Tạo project từ source
        script: |
          cd $CM_BUILD_DIR/iosbuild
          
          if [ -f "../kivy_chat_app/main.py" ]; then
            echo "✅ Using main.py from kivy_chat_app"
            toolchain create $APP_NAME ../kivy_chat_app/main.py
          elif [ -f "../main.py" ]; then
            echo "✅ Using main.py from root"
            toolchain create $APP_NAME ../main.py
          else
            echo "❌ main.py not found"
            find .. -name "main.py"
            exit 1
          fi
          
          toolchain build $APP_NAME

      - name: Chuẩn bị Xcode project
        script: |
          cd $CM_BUILD_DIR/iosbuild
          toolchain xcode $APP_NAME
          cd $APP_NAME-ios
          
          PLIST_PATH="$APP_NAME/Info.plist"
          if [ -f "$PLIST_PATH" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "$PLIST_PATH"
            echo "✅ Updated Bundle ID"
          else
            echo "⚠️ Info.plist not found at $PLIST_PATH"
            find . -name "Info.plist"
            exit 1
          fi

      - name: Build IPA
        script: |
          cd $CM_BUILD_DIR/iosbuild/$APP_NAME-ios
          
          cat > exportOptions.plist <<EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>signingStyle</key>
            <string>manual</string>
          </dict>
          </plist>
          EOL
          
          xcodebuild -scheme $APP_NAME -configuration Release \
                    -archivePath $APP_NAME.xcarchive archive \
                    CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
                    
          xcodebuild -exportArchive -archivePath $APP_NAME.xcarchive \
                    -exportOptionsPlist exportOptions.plist \
                    -exportPath build/Release-iphoneos \
                    CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          
          echo "✅ Build completed. IPA location:"
          find build -name "*.ipa"

    artifacts:
      - iosbuild/$APP_NAME-ios/build/Release-iphoneos/*.ipa
